import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        bufferedReader.close();

        List<Integer> divisor = new ArrayList<>();

        for (int i = 1; i <= n ; i++) {
            if(n % i == 0){
                divisor.add(i);
            }
        }
        int max = -1;
        int bestDiv = 1;

        for(int d : divisor){
            int sum = sumOfDigits(d);
            if(sum > max){
                max = sum;
                bestDiv = d;
            }
        }
        System.out.println(bestDiv);
    }

    private static int sumOfDigits(int d) {
        int sum = 0;
        while (d > 0){
            sum += d % 10;
            d /= 10;
        }
        return sum;
    }

}
